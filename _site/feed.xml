<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Geniuze</title>
	<link href="http://localhost/atom.xml" rel="self" />
	<link href="http://localhost/" />
	<updated>2015-01-10T12:59:56+08:00</updated>
	<id>http://localhost/</id>
	<author>
		<name>Geniuze</name>
		<email>zhang7271@qq.com</email>
	</author>
	
	<entry>
		<title>markdown study (2)</title>
		<link href="http://localhost/posts/markdown-2.html" />
		<updated>2015-01-10T00:00:00+08:00</updated>
		<id>http://localhost/posts/markdown-2.html</id>
		<content type="html"><![CDATA[<p>讲述markdown的基本语法（第二篇）。</p>

<!-- more -->

<h1 id="section">八、图片</h1>

<p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p>

<p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。</p>

<ul>
  <li>
    <p>行内式的图片语法看起来像是：</p>

    <pre><code>  ![我是一张图片](/path/to/img.jpg)
  ![我是一张图片](/path/to/img.jpg "title")
</code></pre>

    <p>详细叙述如下：</p>

    <ul>
      <li>一个惊叹号 !</li>
      <li>接着一个方括号，里面放上图片的替代文字</li>
      <li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。</li>
    </ul>
  </li>
  <li>
    <p>参考式的图片语法则长得像这样：</p>

    <pre><code>  ![我是图片][图片ID]
</code></pre>

    <p>[图片ID]是图片参考的名称，图片参考的定义方式则和连结参考一样：</p>

    <pre><code>  [图片ID](/path/to/img.jpg "title")
</code></pre>

    <p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <img /> 标签。</p>
  </li>
</ul>

<hr />

<h1 id="section-1">九、其它</h1>

<h3 id="section-2">自动链接</h3>

<p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p>

<pre><code>&lt;http://example.com/&gt;
</code></pre>

<p>Markdown 会转为：</p>

<pre><code>&lt;a href="http://example.com/"&gt;http://example.com/&lt;/a&gt;
</code></pre>

<p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p>

<pre><code>&lt;address@example.com&gt;
</code></pre>

<p>Markdown 会转成：</p>

<pre><code>&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre>

<p>在浏览器里面，这段字串（其实是 <a href="mailto:address@example.com">address@example.com</a>）会变成一个可以点击的「address@example.com」链接。</p>

<p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p>

<h3 id="section-3">反斜杠</h3>

<p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <em> 标签），你可以在星号的前面加上反斜杠：</em></p>

<pre><code>\*literal asterisks\*
</code></pre>

<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>

<pre><code>\   反斜线
`   反引号
*   星号
_   底线
{}  花括号
[]  方括号
()  括弧
#   井字号
+   加号
-   减号
.   英文句点
!   惊叹号
</code></pre>

<hr />

]]></content>
	</entry>
	
	<entry>
		<title>markdown study (1)</title>
		<link href="http://localhost/posts/markdown.html" />
		<updated>2015-01-09T00:00:00+08:00</updated>
		<id>http://localhost/posts/markdown.html</id>
		<content type="html"><![CDATA[<p>讲述markdown的基本语法（第一篇）。</p>

<!-- more -->

<h1 id="section">一、标题：</h1>

<h3 id="section-1">使用＝和－来指定标题</h3>

<pre><code>这是标题1
=========

这是标题2
---------
</code></pre>

<h3 id="section-2">使用#来指定标题</h3>

<ul>
  <li>
    <p>前置#号</p>

    <pre><code>  #这是标题1
  ##这是标题2
  ######这是标题6
</code></pre>
  </li>
  <li>
    <p>后面也可闭合，不过#号的个数对标题阶数无影响</p>

    <pre><code>  #这是标题1#
  ##这是标题2##
  ######这是标题6###########
</code></pre>
  </li>
</ul>

<h1 id="section-3">二、区块引用</h1>

<ul>
  <li>
    <p>每行添加一个大于号（&gt;）：</p>

    <pre><code>  &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
  &gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
  &gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
  &gt; 
  &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
  &gt; id sem consectetuer libero luctus adipiscing.
</code></pre>
  </li>
  <li>
    <p>段落首行添加大于号（&gt;）：</p>

    <pre><code>  &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

  &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
  id sem consectetuer libero luctus adipiscing.
</code></pre>
  </li>
  <li>
    <p>可以多层引用，只需根据层数添加不同的个数的（&gt;）：</p>

    <pre><code>  &gt; This is the first level of quoting.
  &gt;
  &gt; &gt; This is nested blockquote.
  &gt;
  &gt; Back to the first level.
</code></pre>
  </li>
  <li>
    <p>引用中可以使用其它markdown语法：</p>

    <pre><code>  &gt; ## 这是一个标题。
  &gt; 
  &gt; 1.   这是第一行列表项。
  &gt; 2.   这是第二行列表项。
  &gt; 
  &gt; 给出一些例子代码：
  &gt; 
  &gt;     return shell_exec("echo $input | $markdown_script");
</code></pre>
  </li>
</ul>

<h1 id="section-4">三、列表</h1>

<ul>
  <li>
    <p>无序列表使用+、-、*开头（后需带一个空格）：</p>

    <pre><code>  * 列表1
  * 列表2
  * 列表3

  + 列表1
  + 列表2
  + 列表3

  - 列表1
  - 列表2
  - 列表3
</code></pre>
  </li>
  <li>
    <p>有序列表使用数字接一个英文句点接空格（数字可以是任意）：</p>

    <pre><code>  1. 列表1
  2. 列表2
  3. 列表3
    
  1. 列表1
  1. 列表2
  1. 列表3

  8. 列表1
  1. 列表2
  3. 列表3
</code></pre>

    <blockquote>
      <p>以上三种写法产生的html结果均相同</p>
    </blockquote>
  </li>
  <li>
    <p>列表中可以包含多个段落，每个项目下的段落必须缩进一个制表符或4个空格：</p>

    <pre><code>  1.  This is a list item with two paragraphs. Lorem ipsum dolor
      sit amet, consectetuer adipiscing elit. Aliquam hendrerit
      mi posuere lectus.

      Vestibulum enim wisi, viverra nec, fringilla in, laoreet
      vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
      sit amet velit.

  2.  Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>
  </li>
  <li>
    <p>列表中添加引用则需缩进：</p>

    <pre><code>  *   A list item with a blockquote:

      &gt; This is a blockquote
      &gt; inside a list item.
</code></pre>
  </li>
  <li>
    <p>列表放代码块，则需缩进8个空格或是两个制表符：</p>

    <pre><code>  *   一列表项包含一个列表区块：

          &lt;代码写在这&gt;
</code></pre>
  </li>
  <li>
    <p>非列表：</p>

    <pre><code>  1986. What a great season.
</code></pre>

    <blockquote>
      <p>上面被识别为列表，为避免这种情况可以在英文句点之前添加反斜杠（’'）:</p>
    </blockquote>

    <pre><code>  1986\. What a great season.
</code></pre>
  </li>
</ul>

<h1 id="section-5">四、代码区块</h1>

<p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 &lt;pre&gt; 和 <code> 标签来把代码区块包起来。要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</code></p>

<pre><code>这是一个普通段落：

    这是一个代码区块。
</code></pre>

<h1 id="section-6">五、分隔线</h1>

<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>

<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre>

<h1 id="section-7">六、区段元素</h1>

<h3 id="section-8">链接</h3>

<p>Markdown支持两种链接语法：行内式和参考式</p>

<ul>
  <li>
    <p>行内式</p>

    <pre><code>  这是一个[链接](http://example.com/ "title").
  这是一个[链接](http://example.com/).
</code></pre>

    <blockquote>
      <p>在同一台主机上访问时，也可以使用相对路径</p>
    </blockquote>

    <pre><code>  这是一个相对路径的[链接](/about).
</code></pre>
  </li>
  <li>
    <p>参考式</p>

    <p>参考式的链接是在链接文字的括号后面再接上另一个方括号，第二个方括号中填入用以标识链接的标记：</p>

    <pre><code>  这是一个[链接][链接标识1]
  这是一个[链接] [链接标识2]
</code></pre>

    <p>中间可以加空格，然后在文件的任意处，把标记的链接内容定义出来：</p>

    <pre><code>  [链接标识1]: http://example1.com "title is here"
  [链接标识2]: http://example2.com (title is here)
</code></pre>

    <p>链接内容定义的形式为：</p>

    <ul>
      <li>方括号（前面可以选择性地加上至多三个空桥来缩进），里面输入链接文字</li>
      <li>接着一个冒号</li>
      <li>接着一个以上的空格或制表符</li>
      <li>接着链接的网址</li>
      <li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li>
    </ul>

    <p><strong>请注意</strong>:有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p>

    <p>链接标识不区分大小写，下面这两个写法实际上是一样的：</p>

    <pre><code>  [链接][标识a]
  [链接][标识A]
</code></pre>

    <p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：
      [Google][]</p>

    <pre><code>  [Google]: http://google.com/
</code></pre>
  </li>
</ul>

<h1 id="section-9">七、强调</h1>

<p>Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，被 * 或 _ 包围的字词会被转成用 &lt;em&gt; 标签包围，用两个 * 或 _ 包起来的话，则会被转成 &lt;strong&gt;，例如：</p>

<pre><code>*single asterisks*

_single underscores_
</code></pre>

<blockquote>
  <p>以上为斜体，下面为粗体字</p>
</blockquote>

<pre><code>**double asterisks**

__double underscores__
</code></pre>

<p><strong>如果 * 和 _ 两边都有空白，则只会被当成普通的符号</strong></p>

<p>如果要在文字前后直接插入星号或底线，可以使用反斜线：</p>

<pre><code>\*我被星包围了\*
</code></pre>

<h1 id="section-10">八、代码</h1>

<p>如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：</p>

<pre><code>我是`代码`
</code></pre>

<p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p>

<pre><code>``代码里面有一个(`)``
</code></pre>

<p>在代码区段内，&amp; 和尖括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p>

<pre><code>Please don't use any `&lt;blink&gt;` tags.
</code></pre>

]]></content>
	</entry>
	
	<entry>
		<title>像黑客一样写自己的技术博客</title>
		<link href="http://localhost/posts/my-tech-blogging-like-a-hacker.html" />
		<updated>2012-03-04T00:00:00+08:00</updated>
		<id>http://localhost/posts/my-tech-blogging-like-a-hacker.html</id>
		<content type="html"><![CDATA[<p>说实话，我发现自己的确是个形式主义者，工具癖，规划控……就是不想静下来仔细思考认真沉淀最后生产出点有质量的内容，而且从小就是（我曾多次准备好一个练习本规划好用来如何写组词造句等，但第一页都没写完过）。再加上重度的拖延症，偶尔稍微纠结下，曾经写点技术积累的想法就彻底夭折了。</p>

<p>但在用了<a href="https://github.com/">GitHub</a>这么一段时间后，对<a href="http://daringfireball.net/projects/markdown/">Markdown</a>语法和<a href="https://github.com/mojombo/jekyll">jekyll</a>建站托管的迷恋一发不可收拾，基本上达到了手里拿着一把榔头就准备到处去敲钉子的地步。于是琢磨着用这些东西再次开个博客稍微的积累点技术方面东西，自然的，也是对<a href="http://wordpress.org/">WordPress</a>时代的一个告别：</p>

<ul>
  <li>其实我不想维护数据库</li>
  <li>其实我只想生成静态的html</li>
  <li>其实我不需要什么CMS</li>
  <li>其实我讨厌富文本编辑器</li>
  <li>其实我希望最好可以像使用svn一样维护版本</li>
</ul>

<p>其实，我只希望一切都很简单。</p>

<p>然后我通过<a href="https://github.com/">GitHub</a>遇见了<a href="https://github.com/mojombo/jekyll">jekyll</a>，加上<a href="https://github.com/">Github</a>本身支持对网站项目的托管和域名指向，以及以前用的各种云服务，整个世界瞬间变的美好了！</p>

<p>现在，我可以：</p>

<ul>
  <li>使用纯文本的<a href="http://daringfireball.net/projects/markdown/">Markdown</a>编辑文章</li>
  <li>使用git维护文章的版本</li>
  <li>不用租一个虚拟空间和数据库服务，而就在<a href="https://github.com/">GitHub</a>上托管整个网站</li>
  <li>自定义域名指向</li>
  <li>使用<a href="http://disqus.com/">Disqus</a>的云评论服务</li>
  <li>一如既往的使用<a href="https://picasaweb.google.com/">Google Picasa</a>作为我的图片外链服务</li>
  <li>用<a href="http://www.google.com/cse/">Google Custom Search</a>自定义站内搜索</li>
  <li><a href="https://github.com/mojombo/jekyll">jekyll</a>自带的或者用<a href="http://softwaremaniacs.org/soft/highlight/en/">HighlightJS</a>做代码高亮</li>
  <li><a href="http://en.gravatar.com/">Gravatar</a>统一头像标识服务</li>
  <li>……</li>
</ul>

<p>感谢这个有云的时代！可以让我们通过一件件简单的工具打造属于每个程序员自己的站点，<a href="http://kyle.xlau.org/posts/blogging-like-a-hacker.html">像黑客一样写博客</a>（原文：<a href="http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html">Blogging Like a Hacker</a>）。于是我可以把精力只放在文章的内容上，这一定会更有效率。</p>

<p>今后，我会在这里记录开发中遇到和解决的各种问题，与技术有关的思考，姑且就当做一个代码笔记本了。不过回到开始说的，不管形式如何，努力坚持产出才是王道。</p>

]]></content>
	</entry>
	
	<entry>
		<title>Hello world!</title>
		<link href="http://localhost/posts/hello-world.html" />
		<updated>2012-03-04T00:00:00+08:00</updated>
		<id>http://localhost/posts/hello-world.html</id>
		<content type="html"><![CDATA[<!-- more -->

<p>这是一篇测试文章，你可以在<code>_posts</code>目录修改或删除它。</p>

<p>现在，我可以：</p>

<ul>
  <li>使用纯文本的<a href="http://daringfireball.net/projects/markdown/">Markdown</a>编辑文章</li>
  <li>使用git维护文章的版本</li>
  <li>不用租一个虚拟空间和数据库服务，而就在<a href="https://github.com/">GitHub</a>上托管整个网站</li>
  <li>自定义域名指向</li>
  <li>使用<a href="http://disqus.com/">Disqus</a>的云评论服务</li>
  <li>一如既往的使用<a href="https://picasaweb.google.com/">Google Picasa</a>作为我的图片外链服务</li>
  <li>用<a href="http://www.google.com/cse/">Google Custom Search</a>自定义站内搜索</li>
  <li><a href="https://github.com/mojombo/jekyll">jekyll</a>自带的或者用<a href="http://softwaremaniacs.org/soft/highlight/en/">HighlightJS</a>做代码高亮</li>
  <li><a href="http://gravatar.com/">Gravatar</a>统一头像标识服务</li>
  <li>……</li>
</ul>

<p>感谢这个有云的时代！可以让我们通过一件件简单的工具打造属于每个程序员自己的站点，<a href="http://kyle.xlau.org/posts/blogging-like-a-hacker.html">像黑客一样写博客</a>（原文：<a href="http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html">Blogging Like a Hacker</a>）。</p>

]]></content>
	</entry>
	
</feed>
